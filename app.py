from flask import Flask, render_template, request, redirect, url_for, Response
import cv2
# import mysql.connector

app = Flask(__name__)
app.config['MYSQL_URI'] = 'mysql://root:password123@localhost/Attendance_System'


@app.route('/')
def index():
    return render_template('login.html')


# password123
# @app.route('/login', methods=['GET', 'POST'])
# def login():
#     if request.method == 'POST':
#         # Get the form data
#         username = request.form['username']
#         password = request.form['password']
#
#         # Connect to the database
#         conn = mysql.connector.connect(user='root', password='password123', host='localhost', database='Attendance_System')
#         cursor = conn.cursor()
#
#         # Check the credentials
#         cursor.execute("SELECT * FROM users WHERE username=%s AND password=%s", (username, password))
#         result = cursor.fetchone()
#         if result:
#             # Redirect to the attendance page
#             return redirect(url_for('attendance'))
#         else:
#             # Redirect back to the login page
#             return redirect(url_for('login'))
#     else:
#         # Render the login template
#         return render_template('login.html')


@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        # Get the form data
        username = request.form['username']
        password = request.form['password']

        # Check the credentials
        # TODO: ADD DATABASE
        if username == 'admin' and password == 'admin':
            # Redirect to the attendance page
            return redirect(url_for('dashboard'))
        else:
            # Redirect back to the login page
            return redirect(url_for('login'))
    else:
        # Render the login template
        return render_template('login.html')


@app.route('/attendance')
def dashboard():
    return render_template('dashboard.html')


@app.route('/start_attendance')
def start_attendance():
    # Return the video stream response generated by the record_attendance function
    return Response(record_attendance(),
                    mimetype='multipart/x-mixed-replace; boundary=frame')


def record_attendance():
    # Open the webcam
    cap = cv2.VideoCapture(0)

    # Set to 1280x720
    cap.set(3, 1280)
    cap.set(4, 720)

    # Keep capturing frames until the program is interrupted
    while True:
        # Capture a frame from the webcam
        success, frame = cap.read()

        # Encode the frame in JPEG format
        ret, jpeg = cv2.imencode('.jpg', frame)

        # Return the frame as a response
        yield (b'--frame\r\n'
               b'Content-Type: image/jpeg\r\n\r\n' + jpeg.tobytes() + b'\r\n')

    cap.release()


if __name__ == '__main__':
    app.run(debug=True, threaded=True)
